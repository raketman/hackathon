# Версия docker-compose
version: '3'
# Список наших сервисов (контейнеров)
services:
    #    hakaton-composer:
    #        restart: 'no'
    #        image: composer:latest
    #        command: install --ignore-platform-reqs -o
    #        volumes:
    #            - ./..:/var/www/hakaton:rw
    hakaton-nginx:
        container_name: hakaton-nginx
        # используем последний стабильный образ nginx
        image: nginx:stable

        restart: unless-stopped
        environment:
            APP_URI_PREFIX: ''
        # маршрутизируем порты
        ports:
            - "80:80"
        #            - "443:443"
        # монтируем директории, слева директории на основной машине, справа - куда они монтируются в контейнере
        volumes:
            - ./hosts:/etc/nginx/conf.d
            - ./..:/var/www/hakaton
            - ./logs:/var/log/nginx
        # nginx должен общаться с php контейнером
        links:
            - hakaton-php
#        networks:
#            - internal

    hakaton-php:
        container_name: hakaton-php

        restart: unless-stopped

        # у нас свой образ для PHP, указываем путь к нему и говорим что его надо собрать
        build:
            context: ./..
            dockerfile: ./docker/images/php/Dockerfile
        # этот образ будет общаться с mysql
        # монтируем директорию с проектами
        volumes:
            - ./..:/var/www/hakaton:cached
            # Подключим логи
            - ./logs:/var/log/nginx
            #исключим вендоры из расшаренной папки (сделао для исключения виндусятников, т.к там тормозит файловая система)
            - /var/www/hakaton/vendor/
        links:
            #- hakaton-elastic
            - hakaton-redis
            - hakaton-rabbitmq
        extra_hosts:
            - "deb.debian.org:128.31.0.62"
            - "v132188.hosted-by-vdsina.ru:95.142.45.155"
#            - "github.com:140.82.118.4"
#            - "api.github.com:140.82.118.5"
        environment:
            XDEBUG_CONFIG: "remote_host=host.docker.internal remote_enable=1"
            PHP_IDE_CONFIG: "serverName=Docker"
#        networks:
#            - internal

    hakaton-redis:
        restart: unless-stopped

        container_name: hakaton-redis
        image: redis:5.0.5
#        networks:
#            - internal

    hakaton-rabbitmq:
        restart: unless-stopped

        container_name: hakaton-rabbitmq
        image: rabbitmq:3.7.5-management
        hostname: app-rabbitmq
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - ./volumes/rabbitmq:/var/lib/rabbitmq
        environment:
            RABBITMQ_ERLANG_COOKIE: 6085e2412b6fa88647466c6a81c0cea0
            RABBITMQ_DEFAULT_USER: rabbitmq
            RABBITMQ_DEFAULT_PASS: rabbitmq
            RABBITMQ_DEFAULT_VHOST: /
#        networks:
#            - internal

    #    hakaton-elastic:
    #        restart: unless-stopped
    #
    #        container_name: hakaton-elastic
    #        image: elasticsearch:7.2.0
    #        volumes:
    #            - ./volumes/elastic:/usr/share/elasticsearch/data
    #        ports:
    #            - "9200:9200"

    hakaton-golang:
        #restart: unless-stopped

        #image: golang:1.8.5-jessie
        build: ./images/golang
        volumes:
            - ../golang:/go/src/app
        #working_dir: /go/src/app

        #command: go run main.go
        links:
            - hakaton-redis
        ports:
            - "81:80"
#        networks:
##            - internal
#networks:
#    internal:
#        driver: bridge
#        ipam:
#            driver: default
#            config:
#                -   subnet: 192.168.220.0/28