# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.
imports:
    - { resource: services/test.yaml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Integrations\BpuimHttpClient:
        arguments:
            $host: '%env(resolve:BPIUM_HOST)%'
            $user: '%env(resolve:BPIUM_USER)%'
            $password: '%env(resolve:BPIUM_PASS)%'

    #  Команды, который надо сконфигурировать, описать в README

    raketman.async.command.http:
        class: App\Command\HttpServerCommand
        calls:
            - ['setLogger', ['@logger']]
            - ['setHandler', ['@raketman.async.handler.symfony4_http']]
        tags:
            - 'console.command'

    raketman.async.command.websocket:
        class: App\Command\WebsocketServerCommand
        calls:
            - ['setLogger', ['@logger']]
            - ['setHandler', ['@raketman.async.handler.symfony4_websocket']]
        tags:
            - 'console.command'

    # бандл

    # сделать фабрику, которая по тэгу будет сеттить setHandler нужный обработчик

    raketman.async.handler.symfony4_http:
        class: App\Handler\Symfony4HttpHandler

    raketman.async.handler.symfony3_http:
        class: App\Handler\Symfony3HttpHandler

    raketman.async.handler.symfony4_websocket:
        class: App\Handler\Symfony4WebsocketHandler